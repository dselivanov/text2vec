% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcm.R
\name{create_tcm}
\alias{create_tcm}
\alias{create_tcm.itoken}
\alias{create_tcm.itoken_parallel}
\title{Term-co-occurence matrix construction}
\usage{
create_tcm(it, vectorizer, skip_grams_window = 5L,
  skip_grams_window_context = c("symmetric", "right", "left"),
  weights = 1/seq_len(skip_grams_window), binary_cooccurence = FALSE,
  ...)

\method{create_tcm}{itoken}(it, vectorizer, skip_grams_window = 5L,
  skip_grams_window_context = c("symmetric", "right", "left"),
  weights = 1/seq_len(skip_grams_window), binary_cooccurence = FALSE,
  ...)

\method{create_tcm}{itoken_parallel}(it, vectorizer,
  skip_grams_window = 5L, skip_grams_window_context = c("symmetric",
  "right", "left"), weights = 1/seq_len(skip_grams_window),
  binary_cooccurence = FALSE, ...)
}
\arguments{
\item{it}{\code{list} of iterators over tokens from \link{itoken}.
Each element is a list of tokens, that is, tokenized and normalized
strings.}

\item{vectorizer}{\code{function} vectorizer function. See
\link{vectorizers}.}

\item{skip_grams_window}{\code{integer} window for term-co-occurence matrix
construction. \code{skip_grams_window} should be > 0 if you plan to use
\code{vectorizer} in \link{create_tcm} function.
Value of \code{0L} means to not construct the TCM.}

\item{skip_grams_window_context}{one of \code{c("symmetric", "right", "left")} -
which context words to use when count co-occurence statistics.}

\item{weights}{weights for context/distant words during co-occurence statistics calculation.
By default we are setting \code{weight = 1 / distance_from_current_word}.
Should have length equal to skip_grams_window.}

\item{binary_cooccurence}{\code{FALSE} by default. If set to \code{TRUE} then function only counts first
appearence of the context word and remaining occurrence are ignored. Useful when creating TCM for evaluation
of coherence of topic models.
\code{"symmetric"} by default - take into account \code{skip_grams_window} left and right.}

\item{...}{placeholder for additional arguments (not used at the moment).
\code{it}.}
}
\value{
\code{TsparseMatrix} TCM matrix
}
\description{
This is a function for constructing a
term-co-occurrence matrix(TCM). TCM matrix usually used with \link{GloVe} word embedding model.
}
\details{
If a parallel backend is registered, it will construct the TCM in multiple threads.
The user should keep in mind that he/she should split data and provide a list
of \link{itoken} iterators. Each element of \code{it} will be handled
in a separate thread combined at the end of processing.
}
\examples{
\dontrun{
data("movie_review")

# single thread

tokens = word_tokenizer(tolower(movie_review$review))
it = itoken(tokens)
v = create_vocabulary(jobs)
vectorizer = vocab_vectorizer(v)
tcm = create_tcm(itoken(tokens), vectorizer, skip_grams_window = 3L)

# parallel version

# set to number of cores on your machine
it = token_parallel(movie_review$review[1:N], tolower, word_tokenizer, movie_review$id[1:N])
v = create_vocabulary(jobs)
vectorizer = vocab_vectorizer(v)
dtm = create_dtm(it, vectorizer, type = 'TsparseMatrix')
tcm = create_tcm(jobs, vectorizer, skip_grams_window = 3L, skip_grams_window_context = "symmetric")
}
}
\seealso{
\link{itoken} \link{create_dtm}
}
