% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformers.R
\name{transform_tf}
\alias{transform_binary}
\alias{transform_tf}
\alias{transform_tfidf}
\title{Scales Document-Term matrix}
\usage{
transform_tf(dtm, sublinear_tf = FALSE, norm = c("l1", "l2"))

transform_tfidf(dtm, idf = NULL, sublinear_tf = FALSE, norm = c("l1",
  "l2"))

transform_binary(dtm)
}
\arguments{
\item{dtm}{\code{dgCMatrix} - Document-Term matrix}

\item{sublinear_tf}{\code{logical}, \code{FALSE} by default.
Apply sublinear tf scaling, i.e. replace tf with 1 + log(tf).}

\item{norm}{\code{character} - Norm type to normalize term vectors. 'l1' by default, i.e.
scale by bumber of words in document.}

\item{idf}{- \code{ddiMatrix} \code{Diagonal} matrix for idf-scaling.
See \link{get_idf}.
If not provided ( \code{NULL} ) - idf will be calculated form current data.}
}
\description{
\code{transform_tf}:

"l1" norm:
\code{dtm_tf = (count of word appears in document) / (total number words in document) }

"l2" norm:
\code{tf = (count of word appears in document) ^ 2 / (total number words in document) ^ 2 }

\code{transform_binary}:
1 if word appears in document, 0 otherwise.

\code{transform_tfidf}:
\code{idf  = log (count of word appears in document) /
(number of documents where the term appears + 1)}
}
\section{Functions}{
\itemize{
\item \code{transform_tfidf}: Transform Document-Term via TF-IDF scaling

\item \code{transform_binary}: Transform Document-Term into binary format
}}
\examples{
\dontrun{
data(moview_review)

txt <- movie_review[['review']][1:1000]
it <- itoken(txt, tolower, word_tokenizer)
vocab <- vocabulary(it)
#remove very common and uncommon words
pruned_vocab = prune_vocabulary(vocab,
 term_count_min = 10,
 doc_proportion_max = 0.8, doc_proportion_min = 0.001,
 max_number_of_terms = 20000)

it <- itoken(txt, tolower, word_tokenizer)
dtm <- create_dtm(it, pruned_vocab)

dtm_filtered <- dtm \%>\%
 # functionality overlaps with prune_vocabulary(),
 # but still can be useful in some cases
 # filter out very common and very uncommon terms
 transform_filter_commons( c(0.001, 0.975) )

# simple term-frequency transormation
transformed_tf <- dtm \%>\%
 transform_tf

# tf-idf transormation
idf <- get_idf(dtm)
transformed_tfidf <- transform_tfidf(dtm,  idf)

}
}
\seealso{
\link{get_idf}
}

